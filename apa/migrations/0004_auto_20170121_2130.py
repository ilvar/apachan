# -*- coding: utf-8 -*-
# Generated by Django 1.10.4 on 2017-01-21 21:30
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('newapa', '0005_randomlogo'),
        ('apa', '0003_img_hash'),
    ]

    operations = [
        migrations.CreateModel(
            name='AntiDos',
            fields=[
                ('ip_address', models.CharField(max_length=24, primary_key=True, serialize=False)),
                ('last_access', models.IntegerField()),
                ('hits_count', models.IntegerField()),
            ],
            options={
                'db_table': 'anti_dos',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BannedImages',
            fields=[
                ('md5sum', models.CharField(max_length=32, primary_key=True, serialize=False)),
                ('datetime', models.DateTimeField()),
            ],
            options={
                'db_table': 'banned_images',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CapLog',
            fields=[
                ('keyword', models.CharField(max_length=32)),
                ('comment_id', models.IntegerField(primary_key=True, serialize=False)),
                ('datetime', models.IntegerField()),
            ],
            options={
                'db_table': 'cap_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Capture',
            fields=[
                ('image_name', models.CharField(max_length=32, primary_key=True, serialize=False)),
                ('keyword', models.CharField(max_length=32)),
                ('image_id', models.CharField(max_length=12)),
                ('last_updated', models.IntegerField()),
                ('num_used', models.IntegerField()),
            ],
            options={
                'db_table': 'capture',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CheckedIp',
            fields=[
                ('ip_address', models.CharField(max_length=24, primary_key=True, serialize=False)),
                ('datetime', models.CharField(blank=True, max_length=24, null=True)),
            ],
            options={
                'db_table': 'checked_ip',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ComNoUp',
            fields=[
                ('comment_id', models.IntegerField(primary_key=True, serialize=False)),
                ('down', models.SmallIntegerField()),
            ],
            options={
                'db_table': 'com_no_up',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Cookies',
            fields=[
                ('cookie_id', models.CharField(max_length=6, primary_key=True, serialize=False)),
                ('creation_date', models.IntegerField()),
                ('datetime', models.IntegerField()),
                ('ban_votes', models.IntegerField()),
                ('ua_crc', models.IntegerField()),
                ('provider_crc', models.IntegerField()),
                ('rnd_code', models.IntegerField()),
                ('ip_address', models.CharField(max_length=23)),
            ],
            options={
                'db_table': 'cookies',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Inbox',
            fields=[
                ('number', models.IntegerField(primary_key=True, serialize=False)),
                ('datetime', models.IntegerField(blank=True, null=True)),
                ('pass_field', models.CharField(blank=True, db_column='pass', max_length=32, null=True)),
                ('text', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'inbox',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IpCountryTable',
            fields=[
                ('start_ip', models.IntegerField(primary_key=True, serialize=False)),
                ('end_ip', models.IntegerField()),
                ('country_code', models.CharField(max_length=2)),
            ],
            options={
                'db_table': 'ip_country_table',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Members',
            fields=[
                ('member_id', models.AutoField(primary_key=True, serialize=False)),
                ('rights', models.SmallIntegerField()),
                ('last_view', models.IntegerField()),
                ('last_visit', models.IntegerField()),
                ('login', models.CharField(max_length=16)),
                ('password', models.CharField(max_length=32)),
            ],
            options={
                'db_table': 'members',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Polls',
            fields=[
                ('comment_id', models.IntegerField(primary_key=True, serialize=False)),
                ('vote1', models.SmallIntegerField(blank=True, null=True)),
                ('vote2', models.SmallIntegerField(blank=True, null=True)),
                ('vote3', models.SmallIntegerField(blank=True, null=True)),
                ('vote4', models.SmallIntegerField(blank=True, null=True)),
                ('vote5', models.SmallIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'polls',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ShowAsAd',
            fields=[
                ('datetime', models.IntegerField()),
                ('comment_id', models.IntegerField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'show_as_ad',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Spammers',
            fields=[
                ('ip_address', models.CharField(max_length=23, primary_key=True, serialize=False)),
                ('datetime', models.IntegerField()),
                ('reason', models.TextField()),
            ],
            options={
                'db_table': 'spammers',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Sticker',
            fields=[
                ('root_id', models.IntegerField(primary_key=True, serialize=False)),
                ('category', models.IntegerField()),
            ],
            options={
                'db_table': 'sticker',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Title',
            fields=[
                ('title_id', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=80)),
            ],
            options={
                'db_table': 'titles',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Votes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment_id', models.IntegerField()),
                ('cookie_id', models.CharField(max_length=6)),
                ('br_crc', models.IntegerField()),
                ('ip_part', models.IntegerField()),
                ('datetime', models.IntegerField()),
                ('value', models.SmallIntegerField()),
            ],
            options={
                'db_table': 'votes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='WrongLogins',
            fields=[
                ('ip_addr', models.CharField(max_length=23, primary_key=True, serialize=False)),
                ('last_attempt', models.IntegerField()),
                ('attempts_count', models.SmallIntegerField()),
            ],
            options={
                'db_table': 'wrong_logins',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Lenta',
            fields=[
                ('root', models.OneToOneField(db_column='root_id', on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='apa.Comment')),
                ('sticker', models.SmallIntegerField()),
                ('drowner', models.SmallIntegerField()),
                ('roulette', models.SmallIntegerField()),
                ('poll', models.SmallIntegerField()),
                ('hidden', models.SmallIntegerField()),
                ('replies', models.IntegerField()),
                ('datetime', models.IntegerField()),
                ('category', models.ForeignKey(db_column='category', on_delete=django.db.models.deletion.DO_NOTHING, to='newapa.Category')),
            ],
            options={
                'db_table': 'lenta',
            },
        ),
        migrations.AlterField(
            model_name='comment',
            name='image',
            field=models.ForeignKey(blank=True, db_column='image_id', max_length=12, null=True, on_delete=django.db.models.deletion.CASCADE, to='apa.Image'),
        ),
        migrations.AlterField(
            model_name='comment',
            name='title',
            field=models.ForeignKey(db_column='title_id', null=True, on_delete=django.db.models.deletion.CASCADE, to='apa.Title'),
        ),
        migrations.AlterField(
            model_name='image',
            name='img_hash',
            field=models.CharField(db_index=True, editable=False, max_length=255, null=True),
        ),
        migrations.AlterField(
            model_name='image',
            name='uses',
            field=models.IntegerField(default=0),
        ),
        migrations.AlterModelTable(
            name='comment',
            table='comments',
        ),
    ]
